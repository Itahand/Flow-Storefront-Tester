var e=require("@onflow/fcl-config"),n=require("@onflow/config"),t=require("fs"),r=require("path"),o=require("@onflow/fcl"),s=require("@onflow/flow-cadut"),c=require("elliptic"),a=require("sha3"),i=require("rlp"),u=require("net");function l(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function f(e){if(e&&e.__esModule)return e;var n=Object.create(null);return e&&Object.keys(e).forEach(function(t){if("default"!==t){var r=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(n,t,r.get?r:{enumerable:!0,get:function(){return e[t]}})}}),n.default=e,n}var m=l(t),g=l(r),d=f(o),p=f(i);const h=(e,n,t)=>{if("string"==typeof n)return h(e,n.split("/"),t);if(!n.length)return e;try{const[r,...o]=n;return h(e[r],o,t)}catch(e){return t}},P=(t,r,o,s)=>{let c=h(e.flowConfig(),o,s);c||(c=s),n.config().put(t,c)},v=e=>null==e?null:e.replace(/^0x/,""),M=e=>null==e?null:"0x"+v(e),A=new c.ec("p256"),b=(e,n)=>{const t=A.keyFromPrivate(Buffer.from(e,"hex")).sign((e=>{const n=new a.SHA3(256);return n.update(Buffer.from(e,"hex")),n.digest()})(n)),r=t.r.toArrayLike(Buffer,"be",32),o=t.s.toArrayLike(Buffer,"be",32);return Buffer.concat([r,o]).toString("hex")},y=(e,t=0)=>function(r={}){try{return Promise.resolve(n.config().get("SERVICE_ADDRESS")).then(function(o){return Promise.resolve(n.config().get("PRIVATE_KEY")).then(function(n){return e=v(e||o),{...r,tempId:`${e}-${t}`,addr:d.sansPrefix(e),keyId:t,signingFunction:function(r){try{return Promise.resolve({keyId:t,addr:M(e),signature:b(n,r.message)})}catch(e){return Promise.reject(e)}}}})})}catch(e){return Promise.reject(e)}},w=e=>"object"==typeof e&&null!==e;function k(e=1){return 0===e?Promise.resolve([]):new Promise((n,t)=>{const r=u.createServer();r.listen(0,()=>{const o=r.address().port;r.close(function(r){try{return r&&t(r),Promise.resolve(k(e-1)).then(function(e){n([...e,o])})}catch(e){return Promise.reject(e)}})})})}function x(e,n,t){if(!e.s){if(t instanceof T){if(!t.s)return void(t.o=x.bind(null,e,n));1&n&&(n=t.s),t=t.v}if(t&&t.then)return void t.then(x.bind(null,e,n),x.bind(null,e,2));e.s=n,e.v=t;const r=e.o;r&&r(e)}}const T=function(){function e(){}return e.prototype.then=function(n,t){const r=new e,o=this.s;if(o){const e=1&o?n:t;if(e){try{x(r,1,e(this.v))}catch(e){x(r,2,e)}return r}return this}return this.o=function(e){try{const o=e.v;1&e.s?x(r,1,n?n(o):o):t?x(r,1,t(o)):x(r,2,o)}catch(e){x(r,2,e)}},r},e}();function S(e,n){try{var t=e()}catch(e){return n(e)}return t&&t.then?t.then(void 0,n):t}const F=e=>function(n){try{function t(){function e(){return Promise.resolve(ue()).then(function(e){function t(){return{code:r,signers:s,args:c,limit:u}}const o={...Ae,...n,FlowManager:e};r=ve(r,o);const a=function(e,n,t){var o=[];for(var s in e)o.push(s);return function(e,n,t){var r,o,s=-1;return function t(c){try{for(;++s<e.length;)if((c=n(s))&&c.then){if(!((a=c)instanceof T&&1&a.s))return void c.then(t,o||(o=x.bind(null,r=new T,2)));c=c.v}r?x(r,1,c):r=c}catch(e){x(r||(r=new T),2,e)}var a}(),r}(o,function(e){return function(e){return Promise.resolve((0,i[e])(r)).then(function(e){r=e})}(o[e])})}(i);return a&&a.then?a.then(t):t()})}let n;const t=function(){if(!a)return Promise.resolve(Me(r)).then(function(e){n=e});n=Ae}();return t&&t.then?t.then(e):e()}let r,o,s,c,a,i,u;if(w(n[0])){const[e]=n,{name:t,code:l,args:f,signers:m,transformers:g,limit:d,service:p=!1}=e;if(a=p,!t&&!l)throw Error("Both `name` and `code` are missing. Provide either of them");o=t,r=l,s=m,c=f,i=g||[],u=d}else"script"===e?[o,c,u,i]=n:[o,s,c,u,i]=n;u=u||999;const l=function(){if(o)return Promise.resolve(("script"===e?Te:xe)({name:o})).then(function(e){r=e})}();return Promise.resolve(l&&l.then?l.then(t):t())}catch(e){return Promise.reject(e)}},j=function(){try{const e=arguments;return Promise.resolve(S(function(){const n=F("tx");return Promise.resolve(n([].slice.call(e))).then(function({code:e,args:n,signers:t,limit:r}){function o(){return Promise.resolve(d.send(a)).then(function(e){return Promise.resolve(d.tx(e).onceExecuted()).then(function(e){return[e,null]})})}const c=y(),a=[d.transaction(e),d.payer(c),d.proposer(c),d.limit(r)];if(t){const e=t.map(e=>y(e));a.push(d.authorizations(e))}else a.push(d.authorizations([c]));const i=function(){if(n)return Promise.resolve(s.resolveArguments(n,e)).then(function(e){a.push(d.args(e))})}();return i&&i.then?i.then(o):o()})},function(e){return[null,e]}))}catch(e){return Promise.reject(e)}},I=function(){try{const e=arguments;return Promise.resolve(S(function(){const n=F("script");return Promise.resolve(n([].slice.call(e))).then(function({code:e,args:n,limit:t}){function r(){return Promise.resolve(d.send(o)).then(function(e){return Promise.resolve(d.decode(e)).then(function(e){return[e,null]})})}const o=[d.script(e),d.limit(t)],c=function(){if(n)return Promise.resolve(s.resolveArguments(n,e)).then(function(e){o.push(d.args(e))})}();return c&&c.then?c.then(r):r()})},function(e){return[null,e]}))}catch(e){return Promise.reject(e)}},E="\nimport FlowManager from 0x01\n\ntransaction (_ name: String, pubKey: String, manager: Address) {\n    prepare( admin: AuthAccount) {\n        let newAccount = AuthAccount(payer:admin)\n        newAccount.addPublicKey(pubKey.decodeHex())\n\n        let linkPath = FlowManager.accountManagerPath\n        let accountManager = getAccount(manager)\n                            .getCapability(linkPath)!\n                            .borrow<&FlowManager.Mapper>()!\n        \n        // Create a record in account database\n        let address = newAccount.address\n        accountManager.setAddress(name, address: address)\n    }\n}\n\n",B=function(e={}){try{return Promise.resolve(s.getEnvironment()).then(function(n){const t={...n,...e};return s.reportMissingImports(E,t,"createAccount =>"),s.replaceImportAddresses(E,t)})}catch(e){return Promise.reject(e)}},C="\nimport FlowManager from 0x01\n\ntransaction(name:String, code: String, manager: Address ##ARGS-WITH-TYPES##) {\n    prepare(acct: AuthAccount){\n        let decoded = code.decodeHex()\n        acct.contracts.add(\n           name: name,\n           code: decoded,\n           ##ARGS-LIST##\n        )\n\n        let linkPath = FlowManager.contractManagerPath\n        let contractManager = getAccount(manager)\n                    .getCapability(linkPath)!\n                    .borrow<&FlowManager.Mapper>()!\n\n        let address = acct.address\n        contractManager.setAddress(name, address: address)\n    }\n}\n\n",O=function(e={}){try{return Promise.resolve(s.getEnvironment()).then(function(n){const t={...n,...e};return s.reportMissingImports(C,t,"deployContract =>"),s.replaceImportAddresses(C,t)})}catch(e){return Promise.reject(e)}},R='\ntransaction ( code: String ) {\n    prepare( admin: AuthAccount) {\n        admin.contracts.add(\n           name: "FlowManager",\n           code: code.decodeHex(),\n        )\n   }\n}\n\n',U=function(e={}){try{return Promise.resolve(s.getEnvironment()).then(function(n){const t={...n,...e};return s.reportMissingImports(R,t,"initManager =>"),s.replaceImportAddresses(R,t)})}catch(e){return Promise.reject(e)}},$='\nimport FungibleToken from 0xFUNGIBLETOKENADDRESS\nimport ExampleToken from 0xTOKENADDRESS\n\ntransaction(recipient: Address, amount: UFix64) {\n    let tokenAdmin: &ExampleToken.Administrator\n    let tokenReceiver: &{FungibleToken.Receiver}\n\n    prepare(signer: AuthAccount) {\n        self.tokenAdmin = signer\n        .borrow<&ExampleToken.Administrator>(from: /storage/exampleTokenAdmin)\n        ?? panic("Signer is not the token admin")\n\n        self.tokenReceiver = getAccount(recipient)\n        .getCapability(/public/exampleTokenReceiver)!\n        .borrow<&{FungibleToken.Receiver}>()\n        ?? panic("Unable to borrow receiver reference")\n    }\n\n    execute {\n        let minter <- self.tokenAdmin.createNewMinter(allowedAmount: amount)\n        let mintedVault <- minter.mintTokens(amount: amount)\n\n        self.tokenReceiver.deposit(from: <-mintedVault)\n\n        destroy minter\n    }\n}\n\n',_=function(e={}){try{return Promise.resolve(s.getEnvironment()).then(function(n){const t={...n,...e};return s.reportMissingImports($,t,"mintTokens =>"),s.replaceImportAddresses($,t)})}catch(e){return Promise.reject(e)}},D="\nimport FlowManager from 0x01\n\ntransaction(name: String, address: Address) {\n    prepare(signer: AuthAccount){\n        let linkPath = FlowManager.contractManagerPath\n        let contractManager = signer\n                                .getCapability(linkPath)!\n                                .borrow<&FlowManager.Mapper>()!\n        contractManager.setAddress(name, address: address)\n    }\n}\n\n",L=function(e={}){try{return Promise.resolve(s.getEnvironment()).then(function(n){const t={...n,...e};return s.reportMissingImports(D,t,"registerContract =>"),s.replaceImportAddresses(D,t)})}catch(e){return Promise.reject(e)}},N="\ntransaction{\n    prepare(acct: AuthAccount){\n        log(acct.address)\n    }\n}\n",H=function(e={}){try{return Promise.resolve(s.getEnvironment()).then(function(n){const t={...n,...e};return s.reportMissingImports(N,t,"scratch =>"),s.replaceImportAddresses(N,t)})}catch(e){return Promise.reject(e)}},q="\nimport FlowManager from 0x01\n\ntransaction(offset: UInt64){\n    prepare(signer:AuthAccount){\n        FlowManager.setBlockOffset(offset)\n    }\n}\n\n",V=function(e={}){try{return Promise.resolve(s.getEnvironment()).then(function(n){const t={...n,...e};return s.reportMissingImports(q,t,"setBlockOffset =>"),s.replaceImportAddresses(q,t)})}catch(e){return Promise.reject(e)}},G="\nimport FlowManager from 0x01\n\ntransaction(offset: UFix64){\n    prepare(signer:AuthAccount){\n        FlowManager.setTimestampOffset(offset)\n    }\n}\n\n",K=function(e={}){try{return Promise.resolve(s.getEnvironment()).then(function(n){const t={...n,...e};return s.reportMissingImports(G,t,"setTimestampOffset =>"),s.replaceImportAddresses(G,t)})}catch(e){return Promise.reject(e)}},z="\nimport FlowManager from 0x01\n\ntransaction(name:String, code: String, manager: Address ##ARGS-WITH-TYPES##) {\n    prepare(acct: AuthAccount){\n        let decoded = code.decodeHex()\n\n        if acct.contracts.get(name: name) == nil {\n          acct.contracts.add(name: name, code: decoded)\n        } else {\n          acct.contracts.update__experimental(name: name, code: decoded)\n        }\n\n        let linkPath = FlowManager.contractManagerPath\n        let contractManager = getAccount(manager)\n                    .getCapability(linkPath)!\n                    .borrow<&FlowManager.Mapper>()!\n\n        let address = acct.address\n        contractManager.setAddress(name, address: address)\n    }\n}\n\n",Y=function(e={}){try{return Promise.resolve(s.getEnvironment()).then(function(n){const t={...n,...e};return s.reportMissingImports(z,t,"updateContract =>"),s.replaceImportAddresses(z,t)})}catch(e){return Promise.reject(e)}};var J={createAccountTemplate:B,createAccount:function(e={}){try{const{addressMap:n,args:t=[],signers:r=[]}=e;return Promise.resolve(B(n)).then(function(n){return s.reportMissing("arguments",t.length,3,"createAccount =>"),s.reportMissing("signers",r.length,1,"createAccount =>"),s.sendTransaction({code:n,processed:!0,...e})})}catch(e){return Promise.reject(e)}},deployContractTemplate:O,deployContract:function(e={}){try{const{addressMap:n,args:t=[],signers:r=[]}=e;return Promise.resolve(O(n)).then(function(n){return s.reportMissing("arguments",t.length,3,"deployContract =>"),s.reportMissing("signers",r.length,1,"deployContract =>"),s.sendTransaction({code:n,processed:!0,...e})})}catch(e){return Promise.reject(e)}},initManagerTemplate:U,initManager:function(e={}){try{const{addressMap:n,args:t=[],signers:r=[]}=e;return Promise.resolve(U(n)).then(function(n){return s.reportMissing("arguments",t.length,1,"initManager =>"),s.reportMissing("signers",r.length,1,"initManager =>"),s.sendTransaction({code:n,processed:!0,...e})})}catch(e){return Promise.reject(e)}},mintTokensTemplate:_,mintTokens:function(e={}){try{const{addressMap:n,args:t=[],signers:r=[]}=e;return Promise.resolve(_(n)).then(function(n){return s.reportMissing("arguments",t.length,2,"mintTokens =>"),s.reportMissing("signers",r.length,1,"mintTokens =>"),s.sendTransaction({code:n,processed:!0,...e})})}catch(e){return Promise.reject(e)}},registerContractTemplate:L,registerContract:function(e={}){try{const{addressMap:n,args:t=[],signers:r=[]}=e;return Promise.resolve(L(n)).then(function(n){return s.reportMissing("arguments",t.length,2,"registerContract =>"),s.reportMissing("signers",r.length,1,"registerContract =>"),s.sendTransaction({code:n,processed:!0,...e})})}catch(e){return Promise.reject(e)}},scratchTemplate:H,scratch:function(e={}){try{const{addressMap:n,args:t=[],signers:r=[]}=e;return Promise.resolve(H(n)).then(function(n){return s.reportMissing("arguments",t.length,0,"scratch =>"),s.reportMissing("signers",r.length,1,"scratch =>"),s.sendTransaction({code:n,processed:!0,...e})})}catch(e){return Promise.reject(e)}},setBlockOffsetTemplate:V,setBlockOffset:function(e={}){try{const{addressMap:n,args:t=[],signers:r=[]}=e;return Promise.resolve(V(n)).then(function(n){return s.reportMissing("arguments",t.length,1,"setBlockOffset =>"),s.reportMissing("signers",r.length,1,"setBlockOffset =>"),s.sendTransaction({code:n,processed:!0,...e})})}catch(e){return Promise.reject(e)}},setTimestampOffsetTemplate:K,setTimestampOffset:function(e={}){try{const{addressMap:n,args:t=[],signers:r=[]}=e;return Promise.resolve(K(n)).then(function(n){return s.reportMissing("arguments",t.length,1,"setTimestampOffset =>"),s.reportMissing("signers",r.length,1,"setTimestampOffset =>"),s.sendTransaction({code:n,processed:!0,...e})})}catch(e){return Promise.reject(e)}},updateContractTemplate:Y,updateContract:function(e={}){try{const{addressMap:n,args:t=[],signers:r=[]}=e;return Promise.resolve(Y(n)).then(function(n){return s.reportMissing("arguments",t.length,3,"updateContract =>"),s.reportMissing("signers",r.length,1,"updateContract =>"),s.sendTransaction({code:n,processed:!0,...e})})}catch(e){return Promise.reject(e)}}};const{updateContractTemplate:W,deployContractTemplate:Q}=J,X=e=>Buffer.from(e,"utf8").toString("hex"),Z=function(e){try{let n,t,r,o,s;if(w(e[0])){const[c]=e,{name:a,to:i,addressMap:u,args:l,update:f}=c;if(!a)throw Error("'name' field is missing");n=a,t=i,o=l,r=u,s=f}else[n,t,r,o,s]=e;return Promise.resolve(ue()).then(function(e){const c={...Ae,FlowManager:e,...r};return{name:n,to:t,args:o,update:s,addressMap:c}})}catch(e){return Promise.reject(e)}},ee=function(e){try{const{to:n,code:t,name:r,args:o,update:c}=e;return Promise.resolve(s.extractContractParameters(t)).then(function(e){function a(n){return Promise.resolve(ue()).then(function(r){return Promise.resolve(Me(t)).then(function(a){return Promise.resolve(ue()).then(function(u){const l={...Ae,...a,FlowManager:u},f=X(ve(t,l));return Promise.resolve(c?W(l):Q(l)).then(function(t){let c=[i,f,r];if(o){c=c.concat(o);const n=s.generateSchema(e.args).map(e=>s.splitArgs(e)[0]),r="abcdefghijklmnopqrstuvwxyz";let a=[];for(let e=0;e<n.length;e++)a.push(`${r[e]}: ${n[e]}`);t=(t=t.replace("##ARGS-WITH-TYPES##",`, ${e.args}`)).replace("##ARGS-LIST##",a)}else t=(t=t.replace("##ARGS-WITH-TYPES##","")).replace("##ARGS-LIST##","");return j({code:t,args:c,signers:[n]})})})})})}const i=r||e.contractName;return n?a(n):Promise.resolve(ue()).then(a)})}catch(e){return Promise.reject(e)}},ne='\npub contract FlowManager {\n\n    /// Account Manager\n    pub event AccountAdded(address: Address)\n\n    pub struct Mapper {\n        pub let accounts: {String: Address}\n\n        pub fun getAddress(_ name: String): Address? {\n            return self.accounts[name]\n        }\n\n        pub fun setAddress(_ name: String, address: Address){\n            self.accounts[name] = address\n            emit FlowManager.AccountAdded(address: address)\n        }\n\n        init(){\n            self.accounts = {}\n        }\n    }\n\n    pub fun getAccountAddress(_ name: String): Address?{\n        let accountManager = self.account\n            .getCapability(self.accountManagerPath)\n            .borrow<&FlowManager.Mapper>()!\n\n        return accountManager.getAddress(name)\n    }\n\n    pub let defaultAccounts: {Address : String}\n\n    pub fun resolveDefaultAccounts(_ address: Address): Address{\n        let alias = self.defaultAccounts[address]!\n        return self.getAccountAddress(alias)!\n    }\n\n    pub let accountManagerStorage: StoragePath\n    pub let contractManagerStorage: StoragePath\n    pub let accountManagerPath: PublicPath\n    pub let contractManagerPath: PublicPath\n\n    /// Environment Manager\n    pub event BlockOffsetChanged(offset: UInt64)\n    pub event TimestampOffsetChanged(offset: UFix64)\n\n    pub struct MockBlock {\n        pub let id: [UInt8; 32]\n        pub let height: UInt64\n        pub let view: UInt64\n        pub let timestamp: UFix64\n\n        init(_ id: [UInt8; 32], _ height: UInt64, _ view: UInt64, _ timestamp: UFix64){\n            self.id = id\n            self.height = height\n            self.view = view\n            self.timestamp = timestamp\n        }\n    }\n\n    pub fun setBlockOffset(_ offset: UInt64){\n        self.blockOffset = offset\n        emit FlowManager.BlockOffsetChanged(offset: offset)\n    }\n\n    pub fun setTimestampOffset(_ offset: UFix64){\n        self.timestampOffset = offset\n        emit FlowManager.TimestampOffsetChanged(offset: offset)\n    }\n\n    pub fun getBlockHeight(): UInt64 {\n        var block = getCurrentBlock()\n        return block.height + self.blockOffset\n    }\n\n    pub fun getBlockTimestamp(): UFix64 {\n        var block = getCurrentBlock()\n        return block.timestamp + self.timestampOffset\n    }\n\n    pub fun getBlock(): MockBlock {\n        var block =  getCurrentBlock()\n        let mockBlock = MockBlock(block.id, block.height, block.view, block.timestamp);\n        return mockBlock\n    }\n\n    pub var blockOffset: UInt64;\n    pub var timestampOffset: UFix64;\n\n\n    // Initialize contract\n    init(){\n        // Environment defaults\n        self.blockOffset = 0;\n        self.timestampOffset = 0.0;\n\n        // Account Manager initialization\n        let accountManager = Mapper()\n        let contractManager = Mapper()\n\n        self.defaultAccounts = {\n          0x01: "Alice",\n          0x02: "Bob",\n          0x03: "Charlie",\n          0x04: "Dave",\n          0x05: "Eve"\n        }\n\n        self.accountManagerStorage = /storage/testSuiteAccountManager\n        self.contractManagerStorage = /storage/testSuiteContractManager\n\n        self.accountManagerPath = /public/testSuiteAccountManager\n        self.contractManagerPath = /public/testSuiteContractManager\n        \n        // Destroy previously stored values\n        self.account.load<Mapper>(from: self.accountManagerStorage)\n        self.account.load<Mapper>(from: self.contractManagerStorage)\n\n        self.account.save(accountManager, to: self.accountManagerStorage)\n        self.account.save(contractManager, to: self.contractManagerStorage)\n\n        self.account.link<&Mapper>(self.accountManagerPath, target: self.accountManagerStorage)\n        self.account.link<&Mapper>(self.contractManagerPath, target: self.contractManagerStorage)\n    }\n}\n \n',te="\nimport FlowManager from 0x01\n\npub fun main(){\n    // the body can be empty, cause script will throw error if FlowManager is not\n    // added to service address\n}\n\n",re="\nimport FlowManager from 0x01\n\npub fun main(name: String, managerAccount: Address):Address? {\n    let manager = getAccount(managerAccount)\n    let linkPath = FlowManager.accountManagerPath\n    let accountManager = manager\n                        .getCapability(linkPath)\n                        .borrow<&FlowManager.Mapper>()!\n\n    return accountManager.getAddress(name)\n\n}\n",oe='\n// This script reads the balance field of an account\'s FlowToken Balance\n\nimport FungibleToken from 0xFUNGIBLETOKENADDRESS\nimport ExampleToken from 0xTOKENADDRESS\n\npub fun main(account: Address): UFix64 {\n    let acct = getAccount(account)\n    let vaultRef = acct.getCapability(/public/exampleTokenBalance)!.borrow<&ExampleToken.Vault{FungibleToken.Balance}>()\n        ?? panic("Could not borrow Balance reference to the Vault")\n\n    return vaultRef.balance\n}\n',se="\nimport FlowManager from 0x01\n\npub fun main():UInt64 {\n    return FlowManager.blockOffset\n}\n\n",ce="\nimport FlowManager from 0x01\n\npub fun main(name: String, managerAccount: Address):Address? {\n    let manager = getAccount(managerAccount)\n    let linkPath = FlowManager.contractManagerPath\n    let contractManager = manager\n                        .getCapability(linkPath)\n                        .borrow<&FlowManager.Mapper>()!\n\n    return contractManager.getAddress(name)\n\n}\n",ae="\nimport FlowManager from 0x01\n\npub fun main():UFix64 {\n    return FlowManager.timestampOffset\n}\n\n";var ie=J;const ue=function(){try{return Promise.resolve(n.config().get("SERVICE_ADDRESS")).then(M)}catch(e){return Promise.reject(e)}},le=function(){try{return Promise.resolve(ue()).then(function(e){return Promise.resolve(function(e={}){try{return Promise.resolve(s.getEnvironment()).then(function(n){const t={...n,...e};return s.reportMissingImports(te,t,"checkManager =>"),s.replaceImportAddresses(te,t)})}catch(e){return Promise.reject(e)}}({FlowManager:e})).then(function(e){return Promise.resolve(I({code:e,service:!0})).then(function([e,n]){const t=function(){if(n&&null===e)return Promise.resolve(function(){try{return Promise.resolve(ie.initManagerTemplate()).then(function(e){return Promise.resolve(function(e={}){try{return Promise.resolve(s.getEnvironment()).then(function(n){const t={...n,...e};return s.reportMissingImports(ne,t,"FlowManager =>"),s.replaceImportAddresses(ne,t)})}catch(e){return Promise.reject(e)}}()).then(function(n){const t=X(n);return Promise.resolve(j({code:e,args:[t],service:!0})).then(function(){})})})}catch(e){return Promise.reject(e)}}()).then(function(){})}();return t&&t.then?t.then(function(){return ue()}):ue()})})})}catch(e){return Promise.reject(e)}},fe=function(e,n=!1){try{if(n){const n=Ae[e];if(void 0!==n)return Promise.resolve(n)}return Promise.resolve(le()).then(function(n){return Promise.resolve(function(e={}){try{return Promise.resolve(s.getEnvironment()).then(function(n){const t={...n,...e};return s.reportMissingImports(ce,t,"getContractAddress =>"),s.replaceImportAddresses(ce,t)})}catch(e){return Promise.reject(e)}}({FlowManager:n})).then(function(t){return Promise.resolve(I({code:t,args:[e,n],service:!0})).then(function([e]){return e})})})}catch(e){return Promise.reject(e)}};function me(e,n,t){if(!e.s){if(t instanceof de){if(!t.s)return void(t.o=me.bind(null,e,n));1&n&&(n=t.s),t=t.v}if(t&&t.then)return void t.then(me.bind(null,e,n),me.bind(null,e,2));e.s=n,e.v=t;const r=e.o;r&&r(e)}}const ge=/(\s*import\s*)([\w\d]+)(\s+from\s*)([\w\d".\\/]+)/g,de=function(){function e(){}return e.prototype.then=function(n,t){const r=new e,o=this.s;if(o){const e=1&o?n:t;if(e){try{me(r,1,e(this.v))}catch(e){me(r,2,e)}return r}return this}return this.o=function(e){try{const o=e.v;1&e.s?me(r,1,n?n(o):o):t?me(r,1,t(o)):me(r,2,o)}catch(e){me(r,2,e)}},r},e}(),pe=e=>e.split(/\s/).map(e=>e.replace(/\s/g,"")).filter(e=>e.length>0&&"import"!==e&&"from"!==e),he=(e,n)=>{const[t,r]=n;return e[t]=r,e},Pe=e=>e&&0!==e.length?e.split("\n").filter(e=>e.includes("import")).map(pe).reduce(he,{}):{},ve=(e,n,t=!0)=>e.replace(ge,(e,r,o,s,c)=>{const a=t?o:c;return`${r}${o} from ${n instanceof Function?n(a):n[a]}`}),Me=function(e){try{const n={},t=function(e,t,r){var o=[];for(var s in e)o.push(s);return function(e,n,t){var r,o,s=-1;return function t(c){try{for(;++s<e.length;)if((c=n(s))&&c.then){if(!((a=c)instanceof de&&1&a.s))return void c.then(t,o||(o=me.bind(null,r=new de,2)));c=c.v}r?me(r,1,c):r=c}catch(e){me(r||(r=new de),2,e)}var a}(),r}(o,function(e){return function(e){const t=function(){if(!Ae[e])return Promise.resolve(fe(e)).then(function(t){n[e]=t});n[e]=Ae[e]}();if(t&&t.then)return t.then(function(){})}(o[e])})}(Pe(e));return Promise.resolve(t&&t.then?t.then(function(){return n}):n)}catch(e){return Promise.reject(e)}},Ae={FlowToken:"0x0ae53cb6e3f42a79",FungibleToken:"0xee82856bf20e2aa6",FlowFees:"0xe5a8b7f23e8b548f",FlowStorageFees:"0xf8d6e0586b0a20c7"},be={"0xe5a8b7f23e8b548f":"0xe5a8b7f23e8b548f","0xf8d6e0586b0a20c7":"0xf8d6e0586b0a20c7","0x0ae53cb6e3f42a79":"0x0ae53cb6e3f42a79","0xee82856bf20e2aa6":"0xee82856bf20e2aa6"},ye=function(e,t="transactions"){try{return Promise.resolve(n.config().get("BASE_PATH")).then(function(n){let r=n;if(w(n)){const o=n[t];if(o)return g.default.resolve(o,`./${e}.cdc`);r=n.base}return g.default.resolve(r,`./${t}/${e}.cdc`)})}catch(e){return Promise.reject(e)}},we=(e,n={},t=!1)=>{const r=(e=>m.default.readFileSync(e,"utf8"))(e);return n?ve(r,{...t?be:Ae,...n}):r},ke=function({name:e,addressMap:n}){try{return Promise.resolve(ye(e,"contracts")).then(function(e){return we(e,n)})}catch(e){return Promise.reject(e)}},xe=function({name:e,addressMap:n}){try{return Promise.resolve(ye(e,"transactions")).then(function(e){return we(e,n)})}catch(e){return Promise.reject(e)}},Te=function({name:e,addressMap:n}){try{return Promise.resolve(ye(e,"scripts")).then(function(e){return we(e,n)})}catch(e){return Promise.reject(e)}},Se={ExampleToken:Ae.FlowToken},Fe=e=>e[0].toLowerCase()+e.slice(1),{expect:je}=global,Ie=function(e){try{let t;function n(n){return t?n:Promise.resolve(e)}const r=function(){if("function"==typeof e)return t=1,Promise.resolve(e())}();return Promise.resolve(r&&r.then?r.then(n):n(r))}catch(e){return Promise.reject(e)}},{spawn:Ee}=require("child_process"),Be={log:console.log,service:console.log,info:console.log,error:console.error,warn:console.warn};var Ce=new class{constructor(){this.initialized=!1,this.logging=!1,this.filters=[],this.logProcessor=e=>e}setLogging(e){this.logging=e}log(e,n="log"){!1!==this.logging&&Be[n](e)}checkLevel(e,n){return"debug"===n&&e.includes("LOG")?"log":n}extractKeyValue(e){const[n,t]=e.split("=");return t.includes("LOG")?{key:n,value:t.replace('"[1;34m','"[1[34m')}:{key:n,value:t}}fixJSON(e){const n=e.split("\n").filter(e=>""!==e);return n.length>1?`[${n.join(",")}]`:n[0]}parseDataBuffer(e){const n=e.toString();try{if(n.includes("msg"))return JSON.parse(this.fixJSON(n))}catch(e){return console.error(e),{msg:e,level:"JSON Error"}}return{msg:n,level:"parser"}}start(e={}){try{const t=this,r=arguments;return Promise.resolve(k(3)).then(function(s){[t.grpcPort,t.restPort,t.adminPort]=s,t.grpcPort=e.grpcPort||t.grpcPort,t.restPort=e.restPort||t.restPort,t.adminPort=e.adminPort||t.adminPort,(r.length>1||"number"==typeof r[0])&&(console.warn("Calling emulator.start with the port argument is now deprecated in favour of dynamically selected ports and will be removed in future versions of flow-js-testing.\nPlease refrain from supplying this argument, as using it may cause unintended consequences.\nMore info: https://github.com/onflow/flow-js-testing/blob/master/TRANSITIONS.md#001-deprecate-emulatorstart-port-argument"),[t.adminPort,e={}]=r,t.grpcPort=t.adminPort-8080+3569);const{flags:c="",logging:a=!1}=e;return n.config().put("accessNode.api",`http://localhost:${t.restPort}`),t.logging=a,t.process=Ee("flow",["emulator","--verbose","--log-format=JSON",`--rest-port=${t.restPort}`,`--admin-port=${t.adminPort}`,`--port=${t.grpcPort}`,c]),t.logProcessor=e=>e,Promise.resolve(n.config().put("logger.level",0)).then(function(){return new Promise((e,r)=>{let s;s=setInterval(function(){try{const t=this,r=function(r,c){try{var a=Promise.resolve(o.send(o.build([o.getBlock(!1)])).then(o.decode)).then(function(){return clearInterval(s),Promise.resolve(n.config().put("logger.level",2)).then(function(){t.initialized=!0,e(!0)})})}catch(e){return}return a&&a.then?a.then(void 0,function(){}):a}();return Promise.resolve(r&&r.then?r.then(function(){}):void 0)}catch(e){return Promise.reject(e)}},100),t.process.stdout.on("data",e=>{const n=t.parseDataBuffer(e);if(Array.isArray(n)){let e=[];t.filters.length>0&&(e=n.filter(e=>{const n=t.checkLevel(e.msg,e.level);return t.filters.includes(n)}));for(let r=0;r<e.length;r++){const e=n[r],{msg:o}=e,s=t.checkLevel(o,e.level);t.log(`${s.toUpperCase()}: ${o}`)}}else{const{msg:e}=n,r=t.checkLevel(e,n.level);t.filters.length>0?t.filters.includes(r)&&(t.log(`${r.toUpperCase()}: ${e}`),e.includes("Starting")&&e.includes(t.adminPort)&&t.log("EMULATOR IS UP! Listening for events!")):(t.log(`${r.toUpperCase()}: ${e}`),n.msg.includes("Starting HTTP server")&&t.log("EMULATOR IS UP! Listening for events!"))}}),t.process.stderr.on("data",e=>{const{message:n}=t.parseDataBuffer(e);t.log(`EMULATOR ERROR: ${n}`,"error"),t.initialized=!1,clearInterval(s),r()}),t.process.on("close",n=>{t.filters.includes("service")&&t.log(`EMULATOR: process exited with code ${n}`),t.initialized=!1,clearInterval(s),e(!1)})})})})}catch(e){return Promise.reject(e)}}clearFilters(){this.filters=[]}removeFilter(e){this.filters=this.filters.filter(n=>n!==e)}addFilter(e){this.filters.includes(e)||this.filters.push(e)}stop(){try{const e=this;return Promise.resolve(new Promise(n=>{e.process.kill(),setTimeout(()=>{e.initialized=!1,n(!1)},50)}))}catch(e){return Promise.reject(e)}}};exports.builtInMethods=function(e){try{function n(){return t.replace(/getCurrentBlock\(\).height/g,"FlowManager.getBlockHeight()").replace(/getCurrentBlock\(\).timestamp/g,"FlowManager.getBlockTimestamp()")}let t=e;const r=function(){if(!((e,n)=>new RegExp("import\\s+FlowManager").test(n))(0,e))return Promise.resolve(function(){try{return Promise.resolve(ue()).then(function(e){return`import FlowManager from ${e}`})}catch(e){return Promise.reject(e)}}()).then(function(n){t=`\n      ${n}\n      ${e}  \n  `})}();return Promise.resolve(r&&r.then?r.then(n):n())}catch(e){return Promise.reject(e)}},exports.deployContract=ee,exports.deployContractByName=function(){try{return Promise.resolve(Z([].slice.call(arguments))).then(function(e){function n(e){return Promise.resolve(ke({name:r,addressMap:o})).then(function(n){const t=/[\\/]/.test(r)?null:r;return ee({to:e,code:n,name:t,args:s,update:c})})}const{to:t,name:r,addressMap:o,args:s,update:c=!1}=e;return t?n(t):Promise.resolve(ue()).then(n)})}catch(e){return Promise.reject(e)}},exports.emulator=Ce,exports.executeScript=I,exports.extractImports=Pe,exports.getAccountAddress=function(e){try{const t=e||`deployment-account-${(Math.random()*Math.pow(10,8)).toFixed(0)}`;return Promise.resolve(le()).then(function(e){const r={FlowManager:e};let o;return Promise.resolve(function(e={}){try{return Promise.resolve(s.getEnvironment()).then(function(n){const t={...n,...e};return s.reportMissingImports(re,t,"getAccountAddress =>"),s.replaceImportAddresses(re,t)})}catch(e){return Promise.reject(e)}}(r)).then(function(s){return Promise.resolve(I({code:s,args:[t,e],service:!0})).then(function([s]){o=s;const c=function(){if(null===o)return Promise.resolve(ie.createAccountTemplate(r)).then(function(r){return Promise.resolve(function(){try{const e=A.keyFromPrivate,t=Buffer,r=t.from;return Promise.resolve(n.config().get("PRIVATE_KEY")).then(function(n){const o=e.call(A,r.call(t,n,"hex")).getPublic("hex").replace(/^04/,"");return p.encode([Buffer.from(o,"hex"),2,3,1e3]).toString("hex")})}catch(e){return Promise.reject(e)}}()).then(function(n){return Promise.resolve(j({code:r,args:[t,n,e]})).then(function([e]){const{events:n}=e,t=n.find(e=>e.type.includes("AccountAdded"));o=t.data.address})})})}();return c&&c.then?c.then(function(){return o}):o})})})}catch(e){return Promise.reject(e)}},exports.getBlockOffset=function(){try{return Promise.resolve(le()).then(function(e){return Promise.resolve(function(e={}){try{return Promise.resolve(s.getEnvironment()).then(function(n){const t={...n,...e};return s.reportMissingImports(se,t,"getBlockOffset =>"),s.replaceImportAddresses(se,t)})}catch(e){return Promise.reject(e)}}({FlowManager:e})).then(function(e){return I({code:e})})})}catch(e){return Promise.reject(e)}},exports.getConfigValue=function(e){try{return Promise.resolve(n.config().get(e))}catch(e){return Promise.reject(e)}},exports.getContractAddress=fe,exports.getContractCode=ke,exports.getFlowBalance=function(e){try{return Promise.resolve(function(e){try{return Promise.resolve(function(e={}){try{return Promise.resolve(s.getEnvironment()).then(function(n){const t={...n,...e};return s.reportMissingImports(oe,t,"getBalance =>"),s.replaceImportAddresses(oe,t)})}catch(e){return Promise.reject(e)}}(Se)).then(function(n){return n.replace(/(ExampleToken)/gi,n=>"ExampleToken"===n?e:Fe(e))})}catch(e){return Promise.reject(e)}}("FlowToken")).then(function(n){const t=ve(n,Ae);return I({code:t,args:[e]})})}catch(e){return Promise.reject(e)}},exports.getScriptCode=Te,exports.getServiceAddress=ue,exports.getTemplate=we,exports.getTimestampOffset=function(){try{return Promise.resolve(le()).then(function(e){return Promise.resolve(function(e={}){try{return Promise.resolve(s.getEnvironment()).then(function(n){const t={...n,...e};return s.reportMissingImports(ae,t,"getTimestampOffset =>"),s.replaceImportAddresses(ae,t)})}catch(e){return Promise.reject(e)}}({FlowManager:e})).then(function(e){return I({code:e})})})}catch(e){return Promise.reject(e)}},exports.getTransactionCode=xe,exports.init=function(e,n={}){try{const{pkey:t="48a1f554aeebf6bf9fe0d7b5b79d080700b073ee77909973ea0b2f6fbc902"}=n;return P("PRIVATE_KEY",process,"accounts/emulator-account/key",t),P("SERVICE_ADDRESS",process,"accounts/emulator-account/address","f8d6e0586b0a20c7"),P("BASE_PATH",process,"testing/paths",e),Promise.resolve()}catch(e){return Promise.reject(e)}},exports.mintFlow=function(e,n){try{return Promise.resolve(function(e){try{return Promise.resolve(ie.mintTokensTemplate(Se)).then(function(n){return n.replace(/(ExampleToken)/gi,n=>"ExampleToken"===n?e:Fe(e))})}catch(e){return Promise.reject(e)}}("FlowToken")).then(function(t){const r=ve(t,Ae);return j({code:r,args:[e,n]})})}catch(e){return Promise.reject(e)}},exports.promise=Ie,exports.replaceImportAddresses=ve,exports.resolveImports=Me,exports.sendTransaction=j,exports.set=P,exports.setBlockOffset=function(e){try{return Promise.resolve(le()).then(function(n){const t=[e];return Promise.resolve(ie.setBlockOffsetTemplate({FlowManager:n})).then(function(e){return j({code:e,args:t,payer:[n]})})})}catch(e){return Promise.reject(e)}},exports.setTimestampOffset=function(e){try{return Promise.resolve(le()).then(function(n){const t=[e];return Promise.resolve(ie.setTimestampOffsetTemplate({FlowManager:n})).then(function(e){return j({code:e,args:t,payer:[n]})})})}catch(e){return Promise.reject(e)}},exports.shallPass=function(e){try{const n=Ie(e);return Promise.resolve(n).then(function(e){const[n,t]=e;if(t)throw t;let r,o;if(Array.isArray(n)){const{status:e,errorMessage:t}=n;r=e,o=t}else{const{status:e,errorMessage:t}=n;r=e,o=t}return Promise.resolve(je(r).toBe(4)).then(function(){return Promise.resolve(je(o).toBe("")).then(function(){return e})})})}catch(e){return Promise.reject(e)}},exports.shallResolve=function(e){try{const n=Ie(e);return Promise.resolve(n).then(function(e){const[,n]=e;return je(n).toBe(null),e})}catch(e){return Promise.reject(e)}},exports.shallRevert=function(e,n){try{const t=Ie(e);return Promise.resolve(t).then(function(e){const[t,r]=e;return Promise.resolve(je(t).toBe(null)).then(function(){const t=function(){if(!n)return Promise.resolve(je(r).not.toBe(null)).then(function(){});{var e;const t=null==(e=r.toString().match(/^error: (panic)|(assertion failed): ([^\r\n]*)$/m))?void 0:e.at(3),o=n instanceof RegExp?Promise.resolve(je(t).toMatch(n)).then(function(){}):Promise.resolve(je(t).toBe(n)).then(function(){});if(o&&o.then)return o.then(function(){})}}();return t&&t.then?t.then(function(){return e}):e})})}catch(e){return Promise.reject(e)}},exports.shallThrow=function(e){try{const n=Ie(e);return Promise.resolve(n).then(function(e){const[n,t]=e;return Promise.resolve(je(n).toBe(null)).then(function(){return Promise.resolve(je(t).not.toBe(null)).then(function(){return e})})})}catch(e){return Promise.reject(e)}};
//# sourceMappingURL=index.js.map
